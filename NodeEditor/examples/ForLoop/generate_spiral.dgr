[diagram]
block=[U7] category=[Tools.SimpleOperation] class=[mult_float_dyn] valInputs=[(['in1', 'in2'], ['Node(N14)', 'Node(N10)'], ['multiplication'], ['float'])] RectF=[(196.52379192507777, 342.0663124948071, 150.0, 80.0)]
constant=[A0] value=[20.0] format=[float] label=[A0] RectF=[(-260.17204926672923, 550.7009549862369, 118.0, 31.0)]
block=[U4] category=[Tools.SimpleOperation] class=[add_float_dyn] valInputs=[(['in1', 'in2'], ['Node(N7)', 'Node(N8)'], ['addition'], ['float'])] RectF=[(196.06701596636782, 207.78151592887798, 150.0, 80.0)]
block=[U3] category=[Tools.SimpleOperation] class=[sub_float_dyn] valInputs=[(['in1', 'in2'], ['Node(N1)', 'Node(N5)'], ['subtract'], ['float'])] RectF=[(208.073062692316, 74.1190651624704, 150.0, 80.0)]
block=[U9] category=[Numpy.Functions_trigo] class=[numpy_sin] valInputs=[(['x', 'angle_type'], ['Node(N21)', 'degree'], ['sinus'], ['float'])] RectF=[(204.95880299922948, 494.92647861621253, 150.0, 80.0)]
block=[U1] category=[Numpy.Functions_trigo] class=[numpy_cos] valInputs=[(['x', 'angle_type'], ['Node(N2)', 'degree'], ['cosinus'], ['float'])] RectF=[(-197.38935534733963, -13.748574579856367, 151.734375, 80.0)]
block=[U2] category=[Numpy.Functions_trigo] class=[numpy_sin] valInputs=[(['x', 'angle_type'], ['Node(N3)', 'degree'], ['sinus'], ['float'])] RectF=[(-83.72067354917192, 632.5652549057827, 150.0, 80.0)]
block=[U8] category=[Tools.SimpleOperation] class=[mult_float_dyn] valInputs=[(['in1', 'in2'], ['Node(N20)', 'Node(N26)'], ['multiplication'], ['float'])] RectF=[(-93.79736464062032, 476.9340892557299, 150.0, 80.0)]
block=[U10] category=[Tools.SimpleOperation] class=[mult_float_dyn] valInputs=[(['in1', 'in2'], ['Node(N16)', 'Node(N22)'], ['multiplication'], ['float'])] RectF=[(479.5568940167517, 497.7626413075504, 150.0, 80.0)]
link=[N0] node=[U0:outAbscissa#Node#F0:in0]
link=[N25] node=[U10:multiplication#Node#F0:out4]
link=[N22] node=[U9:sinus#Node#U10:in2]
link=[N16] node=[U7:multiplication#Node#U10:in1]
link=[N26] node=[A0:#Node#U8:in2]
link=[N21] node=[U8:multiplication#Node#U9:x]
link=[N20] node=[F0:in0#Node#U8:in1]
link=[N15] node=[U7:multiplication#Node#F0:out3]
link=[N14] node=[U1:cosinus#Node#U7:in1]
link=[N10] node=[U2:sinus#Node#U7:in2]
link=[N9] node=[U4:addition#Node#F0:out2]
link=[N8] node=[U2:sinus#Node#U4:in2]
link=[N7] node=[U1:cosinus#Node#U4:in1]
link=[N6] node=[U3:subtract#Node#F0:out1]
link=[N5] node=[U2:sinus#Node#U3:in2]
link=[N1] node=[U1:cosinus#Node#U3:in1]
link=[N19] node=[F0:out3#Node#U6:in_list_2]
link=[N18] node=[F0:out2#Node#U6:in_list_1]
link=[N12] node=[F0:out1#Node#U6:in_list_0]
link=[N11] node=[F0:out0#Node#U6:in_list]
link=[N4] node=[U1:cosinus#Node#F0:out0]
link=[N13] node=[U6:array#Node#U5:data]
link=[N2] node=[F0:in0#Node#U1:x]
link=[N3] node=[F0:in0#Node#U2:x]
link=[N24] node=[U2:sinus#Node#F0:out5]
link=[N17] node=[F0:out4#Node#U6:in_list_3]
link=[N23] node=[F0:out5#Node#U5:x]
block=[U0] category=[Generator.Abscissa] class=[AbsX] valInputs=[(['xmin', 'xmax', 'delta_x'], [0.0, 360.0, 1.0], ['outAbscissa'], ['list_float'])] RectF=[(-572.1003838052376, 293.8509582000564, 158.390625, 80.0)]
loopFor=[F0] inputs=[[[['in0', 'in', 'list_float'], ['in0', 'out', 'float']]]] outputs=[[[['out0', 'in', 'float'], ['out0', 'out', 'list_float']], [['out1', 'in', 'float'], ['out1', 'out', 'list_float']], [['out2', 'in', 'float'], ['out2', 'out', 'list_float']], [['out3', 'in', 'float'], ['out3', 'out', 'list_float']], [['out4', 'in', 'float'], ['out4', 'out', 'list_float']], [['out5', 'in', 'float'], ['out5', 'out', 'list_float']]]] listItems=[['U1', 'U7', 'U9', 'U8', 'U2', 'U10', 'U3', 'A0', 'U4']] RectF=[(-273.8906300555949, -94.53227442015071, 1095.3025154649933, 860.4654176473849)]
block=[U5] category=[Matplotlib.MatplotCurve] class=[MatPlotCurve] valInputs=[(['data', 'x'], ['Node(N13)', 'Node(N23)'], [], [])] RectF=[(1388.6318514779332, 381.73866074416253, 150.0, 80.0)]
block=[U6] category=[Tools.ArrayManipulation] class=[build_array_float_dyn] valInputs=[(['in_list', 'in_list_0', 'in_list_1', 'in_list_2', 'in_list_3'], ['Node(N11)', 'Node(N12)', 'Node(N18)', 'Node(N19)', 'Node(N17)'], ['array'], ['array_float'])] RectF=[(1121.804102120436, 243.57014534976378, 150.0, 100.0)]
[execution]
[]
['U0', 'F0', 'U6', 'U5']
{'U6': ('Tools.ArrayManipulation', 'build_array_float_dyn', "(['in_list', 'in_list_0', 'in_list_1', 'in_list_2', 'in_list_3'], ['F0:out0', 'F0:out1', 'F0:out2', 'F0:out3', 'F0:out4'], ['array'], ['array_float'])"), 'U5': ('Matplotlib.MatplotCurve', 'MatPlotCurve', "(['data', 'x'], ['U6:array', 'F0:out5'], [], [])"), 'U0': ('Generator.Abscissa', 'AbsX', "(['xmin', 'xmax', 'delta_x'], [0.0, 360.0, 1.0], ['outAbscissa'], ['list_float'])")}
['F0:out5', 'F0:out4', 'F0:in0', 'F0:in0', 'U6:array', 'F0:out0', 'F0:out1', 'F0:out2', 'F0:out3', 'F0:in0', 'A0:', 'U0:outAbscissa']
{}
[]
[loopfor F0]
['F0:in0=U0:outAbscissa']
['ThreadOn', 'U1', 'U2', 'U8', 'ThreadOff', 'U9', 'U7', 'ThreadOn', 'U3', 'U4', 'U10', 'ThreadOff']
{'U10': ('Tools.SimpleOperation', 'mult_float_dyn', "(['in1', 'in2'], ['U7:multiplication', 'U9:sinus'], ['multiplication'], ['float'])"), 'U2': ('Numpy.Functions_trigo', 'numpy_sin', "(['x', 'angle_type'], ['F0:in0', 'degree'], ['sinus'], ['float'])"), 'U1': ('Numpy.Functions_trigo', 'numpy_cos', "(['x', 'angle_type'], ['F0:in0', 'degree'], ['cosinus'], ['float'])"), 'U9': ('Numpy.Functions_trigo', 'numpy_sin', "(['x', 'angle_type'], ['U8:multiplication', 'degree'], ['sinus'], ['float'])"), 'U3': ('Tools.SimpleOperation', 'sub_float_dyn', "(['in1', 'in2'], ['U1:cosinus', 'U2:sinus'], ['subtract'], ['float'])"), 'U4': ('Tools.SimpleOperation', 'add_float_dyn', "(['in1', 'in2'], ['U1:cosinus', 'U2:sinus'], ['addition'], ['float'])"), 'U7': ('Tools.SimpleOperation', 'mult_float_dyn', "(['in1', 'in2'], ['U1:cosinus', 'U2:sinus'], ['multiplication'], ['float'])"), 'U8': ('Tools.SimpleOperation', 'mult_float_dyn', "(['in1', 'in2'], ['F0:in0', 20.0], ['multiplication'], ['float'])")}
['U2:sinus', 'F0:in0', 'F0:in0', 'U1:cosinus', 'U1:cosinus', 'U2:sinus', 'U3:subtract', 'U1:cosinus', 'U2:sinus', 'U4:addition', 'U2:sinus', 'U1:cosinus', 'U7:multiplication', 'F0:in0', 'U8:multiplication', 'U7:multiplication', 'U9:sinus', 'U10:multiplication']
{}
['F0:out5=U2:sinus', 'F0:out0=U1:cosinus', 'F0:out1=U3:subtract', 'F0:out2=U4:addition', 'F0:out3=U7:multiplication', 'F0:out4=U10:multiplication']
