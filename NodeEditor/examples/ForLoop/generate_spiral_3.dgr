[diagram]
constant=[A2] value=[1.618] format=[float] label=[delta_x] RectF=[(-780.7372848298264, 69.12100599531534, 118.0, 31.0)]
constant=[A0] value=[110.0] format=[float] label=[xmax] RectF=[(-780.6632432487793, -15.352324383556226, 118.0, 31.0)]
constant=[A3] value=[0.0] format=[float] label=[xmin] RectF=[(-780.2759735259747, -93.5436749979566, 118.0, 31.0)]
block=[U5] category=[Tools.SimpleOperation] class=[mult_float] valInputs=[(['int1', 'int2'], ['Node(N5)', 'Node(N1)'], ['multiplication'], ['float'])] RectF=[(307.48387075437444, 52.407343054302586, 151.84375, 80.0)]
block=[U4] category=[Tools.SimpleOperation] class=[mult_float] valInputs=[(['int1', 'int2'], ['Node(N4)', 'Node(N6)'], ['multiplication'], ['float'])] RectF=[(309.5241311935075, -117.35408175739158, 151.84375, 80.0)]
block=[U3] category=[Numpy.Functions_trigo] class=[numpy_sin] valInputs=[(['x', 'angle_type'], ['Node(N3)', 'Node(N7)'], ['sinus'], ['float'])] RectF=[(-7.0390584915407715, -186.3723409900185, 150.0, 80.0)]
block=[U2] category=[Numpy.Functions_trigo] class=[numpy_cos] valInputs=[(['x', 'angle_type'], ['Node(N2)', 'Node(N13)'], ['cosinus'], ['float'])] RectF=[(-6.1851298403593375, 151.67160775887203, 151.734375, 80.0)]
constant=[A1] value=[radian] format=[enumerate(('degree', 'radian'))] label=[A1] RectF=[(-310.93274002495, -102.22971250173758, 85.0, 31.0)]
link=[N11] node=[F0:out1#Node#U6:x]
link=[N14] node=[A2:#Node#U0:delta_x]
link=[N12] node=[A0:#Node#U0:xmax]
link=[N3] node=[F0:in0#Node#U3:x]
link=[N2] node=[F0:in0#Node#U2:x]
link=[N15] node=[A3:#Node#U0:xmin]
link=[N8] node=[U4:multiplication#Node#F0:out0]
link=[N9] node=[U5:multiplication#Node#F0:out1]
link=[N0] node=[U0:outAbscissa#Node#F0:in0]
link=[N4] node=[U3:sinus#Node#U4:int1]
link=[N5] node=[U2:cosinus#Node#U5:int1]
link=[N1] node=[F0:in0#Node#U5:int2]
link=[N6] node=[F0:in0#Node#U4:int2]
link=[N7] node=[A1:#Node#U3:angle_type]
link=[N13] node=[A1:#Node#U2:angle_type]
link=[N10] node=[F0:out0#Node#U6:data]
block=[U6] category=[Matplotlib.MatplotCurve] class=[MatPlotCurve2] valInputs=[(['data', 'x'], ['Node(N10)', 'Node(N11)'], [], [])] RectF=[(867.5246805224293, -48.52593314164917, 150.0, 80.0)]
block=[U0] category=[Generator.Abscissa] class=[AbsX] valInputs=[(['xmin', 'xmax', 'delta_x'], ['Node(N15)', 'Node(N12)', 'Node(N14)'], ['outAbscissa'], ['list_float'])] RectF=[(-589.1753382078756, -23.58535471236047, 158.390625, 80.0)]
loopFor=[F0] inputs=[[[['in0', 'in', 'list_float'], ['in0', 'out', 'float']]]] outputs=[[[['out0', 'in', 'float'], ['out0', 'out', 'list_float']], [['out1', 'in', 'float'], ['out1', 'out', 'list_float']]]] listItems=[['U2', 'U3', 'U5', 'U4', 'A1']] RectF=[(-336.26335281913043, -234.4512640585029, 868.4861456124212, 502.59152874126767)]
[execution]
[]
['U0', 'F0', 'U6']
{'U6': ('Matplotlib.MatplotCurve', 'MatPlotCurve2', "(['data', 'x'], ['F0:out0', 'F0:out1'], [], [])"), 'U0': ('Generator.Abscissa', 'AbsX', "(['xmin', 'xmax', 'delta_x'], [0.0, 110.0, 1.618], ['outAbscissa'], ['list_float'])")}
['F0:out0', 'A1:', 'A1:', 'F0:in0', 'F0:in0', 'U0:outAbscissa', 'A3:', 'F0:in0', 'F0:in0', 'A0:', 'A2:', 'F0:out1']
{}
[]
[loopfor F0]
['F0:in0=U0:outAbscissa']
['ThreadOn', 'U2', 'U3', 'ThreadOff', 'ThreadOn', 'U4', 'U5', 'ThreadOff']
{'U4': ('Tools.SimpleOperation', 'mult_float', "(['int1', 'int2'], ['U3:sinus', 'F0:in0'], ['multiplication'], ['float'])"), 'U5': ('Tools.SimpleOperation', 'mult_float', "(['int1', 'int2'], ['U2:cosinus', 'F0:in0'], ['multiplication'], ['float'])"), 'U2': ('Numpy.Functions_trigo', 'numpy_cos', "(['x', 'angle_type'], ['F0:in0', 'radian'], ['cosinus'], ['float'])"), 'U3': ('Numpy.Functions_trigo', 'numpy_sin', "(['x', 'angle_type'], ['F0:in0', 'radian'], ['sinus'], ['float'])")}
['F0:in0', 'F0:in0', 'U2:cosinus', 'U3:sinus', 'U5:multiplication', 'U4:multiplication', 'F0:in0', 'F0:in0']
{}
['F0:out1=U5:multiplication', 'F0:out0=U4:multiplication']
