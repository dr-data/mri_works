[diagram]
submod=[M0] nameMod=[Fact_C] valInputs=[(['enter_int'], ['Node(N1)'], ['factorial', 'str_conc'], ['int', 'str'])] RectF=[(-377.09629467547404, -6.92087026598881, 150.0, 80.0)]
link=[N10] node=[U5:out_zipped#Node#U6:in_dict]
block=[U6] category=[Tools.Print] class=[Print_dict] valInputs=[(['comment', 'in_dict'], ['zipped = ', 'Node(N10)'], [], [])] RectF=[(317.5356931747652, -26.58438361463149, 150.0, 80.0)]
link=[N9] node=[F0:out0#Node#U5:value]
link=[N8] node=[F0:out1#Node#U5:coord]
block=[U5] category=[Tools.DictManipulation] class=[lists_to_zip] valInputs=[(['coord', 'value'], ['Node(N8)', 'Node(N9)'], ['out_zipped'], ['dict'])] RectF=[(64.98404883576583, -11.81528160650285, 150.0, 80.0)]
link=[N4] node=[M0:str_conc#Node#F0:out1]
link=[N2] node=[M0:factorial#Node#F0:out0]
link=[N1] node=[F0:in0#Node#M0:enter_int]
link=[N0] node=[U0:serie_int#Node#F0:in0]
block=[U0] category=[Generator.Integer] class=[ListOfInt] valInputs=[(['n'], [15], ['serie_int'], ['list_int'])] RectF=[(-772.0986920878368, -6.523581232868317, 150.0, 80.0)]
loopFor=[F0] inputs=[[[['in0', 'in', 'list_int'], ['in0', 'out', 'int']]]] outputs=[[[['out0', 'in', 'int'], ['out0', 'out', 'list_int']], [['out1', 'in', 'str'], ['out1', 'out', 'list_str']]]] listItems=[['M0']] RectF=[(-520.7431654633668, -134.3826793111611, 399.86967731090874, 345.538101216133)]
[execution]
[]
['U0', 'F0', 'U5', 'U6']
{'U0': ('Generator.Integer', 'ListOfInt', "(['n'], [15], ['serie_int'], ['list_int'])"), 'U5': ('Tools.DictManipulation', 'lists_to_zip', "(['coord', 'value'], ['F0:out1', 'F0:out0'], ['out_zipped'], ['dict'])"), 'U6': ('Tools.Print', 'Print_dict', "(['comment', 'in_dict'], ['zipped = ', 'U5:out_zipped'], [], [])")}
['U0:serie_int', 'F0:in0', 'M0:str_conc', 'F0:out1', 'F0:out0', 'U5:out_zipped']
{}
[]
[loopfor F0]
['F0:in0=U0:serie_int']
['M0']
{}
['F0:in0', 'M0:factorial', 'M0:str_conc']
{'M0': ('Fact_C', "(['enter_int'], ['F0:in0'], ['factorial', 'str_conc'], ['int', 'str'])")}
['F0:out0=M0:factorial', 'F0:out1=M0:str_conc']
[submod M0]
['C0:enter_int=F0:in0']
['ThreadOn', 'U0', 'U3', 'ThreadOff', 'U1']
{'U3': ('Tools.Conversion', 'IntToString', "(['inInt'], ['C0:enter_int'], ['outString'], ['str'])"), 'U0': ('C.Maths', 'fact', "(['enter_int'], ['C0:enter_int'], ['factorial'], ['int'])"), 'U1': ('Tools.StringManipulation', 'string_concatenat_dyn', "(['stringIn', 'stringIn_0'], ['U3:outString', ' != '], ['str_conc'], ['str'])")}
['U1:str_conc', 'U3:outString', 'U0:factorial', 'C0:enter_int', 'C0:enter_int', 'A1:']
{}
['M0:factorial=U0:factorial', 'M0:str_conc=U1:str_conc']
