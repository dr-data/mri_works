[diagram]
constant=[A2] value=[90.0] format=[float] label=[A2] RectF=[(-575.7435660488908, 53.517816190432825, 118.0, 31.0)]
constant=[A1] value=[15000.0] format=[float] label=[A1] RectF=[(-580.2044618388074, -24.39741821104712, 118.0, 31.0)]
constant=[A0] value=[45.0] format=[float] label=[A0] RectF=[(-513.5851030590543, -78.84498146914282, 118.0, 31.0)]
constant=[A3] value=['radian'] format=[enumerate(('degree', 'radian'))] label=[A3] RectF=[(-480.4020227993722, 115.86146303790844, 85.0, 31.0)]
link=[N6] node=[S0:Y2#Node#U2:x]
link=[N5] node=[S0:Y1#Node#U2:data]
link=[N0] node=[A0:#Node#S0:Xmin]
link=[N1] node=[A1:#Node#S0:Xmax]
link=[N2] node=[A2:#Node#S0:delta_X]
link=[N3] node=[A3:#Node#S0:angle_type]
block=[U2] category=[Matplotlib.MatplotCurve] class=[pyPlot] valInputs=[(['data', 'x', 'title'], ['Node(N5)', 'Node(N6)', ''], [], [])] RectF=[(-57.94421487212527, -9.992064155472036, 124.41766166955586, 91.48329498721947)]
script=[S0] inputs=[['Xmin', 'in', 'float'], ['Xmax', 'in', 'float'], ['delta_X', 'in', 'float'], ['angle_type', 'in', 'str']] outputs=[['Y1', 'out', 'list_float'], ['Y2', 'out', 'list_float']] code=[your code] RectF=[(-314.83233475250745, -66.62977707238286, 200.0, 200.0)]
[source S0]
["angle_type='radian'", 'delta_X=90.0', 'Xmax=15000.0', 'Xmin=45.0']
import numpy as np

Y1=[]
Y2 = []
if 'degree' in angle_type:
    Xmin *= np.pi / 180.0
    Xmax *= np.pi / 180.0
    delta_X *= np.pi / 180.0
X = np.linspace(Xmin, Xmax, int(1 + (Xmax - Xmin) / delta_X))

for elem in X:
    Y1.append(np.cos(elem) * elem)
    Y2.append(np.sin(elem) * elem)
['S0:Y1', 'S0:Y2']
[/source S0]

[execution]
[]
['S0', 'U2']
{'U2': ('Matplotlib.MatplotCurve', 'pyPlot', "(['data', 'x', 'title'], ['S0:Y1', 'S0:Y2', ''], [], [])")}
['A3:', 'A2:', 'A1:', 'A0:', 'S0:Y1', 'S0:Y2']
{}
[]
