[diagram]
constant=[A8] value=[1.0] format=[float] label=[delta_x] RectF=[(-1077.5484280858875, 11.782088999324849, 119.0, 31.0)]
constant=[A7] value=[5000.0] format=[float] label=[xmax] RectF=[(-1210.5508270674868, -56.48671763631855, 119.0, 31.0)]
constant=[A6] value=[0.0] format=[float] label=[xmin] RectF=[(-1130.436581566511, -125.30221051280694, 119.0, 31.0)]
constant=[A0] value=[100.0] format=[float] label=[amplitude] RectF=[(-729.0476226019898, -335.1151900079216, 119.0, 31.0)]
constant=[A1] value=[500.0] format=[float] label=[decay] RectF=[(-730.1570309164998, -276.5895522257533, 119.0, 31.0)]
constant=[A2] value=[1.0] format=[float] label=[shift] RectF=[(-741.6209349891187, -200.35968743598394, 119.0, 31.0)]
constant=[A3] value=[45.0] format=[float] label=[angle] RectF=[(-672.8927503421414, 64.18672841065067, 119.0, 31.0)]
constant=[A4] value=[a*exp(-bx)+c] format=[enumerate(('a*exp(-bx)', 'a*exp(-bx)+c', 'a*(1-exp(-bx))', 'a*(1-exp(-bx))+c', 'a*(1-2*exp(-bx))', 'a*(1-2*c*exp(-bx))'))] label=[function_exponential] RectF=[(-748.7575761607038, -128.55077608624958, 166.0, 31.0)]
constant=[A5] value=[sin(x)] format=[enumerate(('sin(x)', 'cos(x)', 'tan(x)', 'arcsin(x)', 'arccos(x)', 'arctan(x)'))] label=[function_trigonometric] RectF=[(-676.6764825765378, 136.66190300005968, 106.0, 31.0)]
link=[N16] node=[A8:#Node#U2:delta_x]
link=[N15] node=[A7:#Node#U2:xmax]
link=[N14] node=[A6:#Node#U2:xmin]
link=[N7] node=[U2:outAbscissa#Node#U3:x]
link=[N6] node=[U5:array#Node#U3:data]
link=[N5] node=[U4:listMult#Node#U5:in_list_0]
link=[N0] node=[A0:#Node#U0:amplitude]
link=[N2] node=[A1:#Node#U0:decay]
link=[N3] node=[A2:#Node#U0:shift]
link=[N8] node=[U0:outFonction#Node#U5:in_list]
link=[N9] node=[U2:outAbscissa#Node#U0:x]
link=[N10] node=[U0:outFonction#Node#U4:list1]
link=[N1] node=[A3:#Node#U1:angle]
link=[N4] node=[U2:outAbscissa#Node#U1:x_degree]
link=[N11] node=[U1:outFonction#Node#U4:list2]
link=[N12] node=[A4:#Node#U0:function]
link=[N13] node=[A5:#Node#U1:function]
block=[U5] category=[Tools.ArrayManipulation] class=[build_array_float_dyn] valInputs=[(['in_list', 'in_list_0'], ['Node(N8)', 'Node(N5)'], ['array'], ['array_float'])] RectF=[(88.11803411288875, -254.828334665609, 150.0, 80.0)]
block=[U3] category=[Matplotlib.MatplotCurve] class=[MatPlotCurve] valInputs=[(['data', 'x'], ['Node(N6)', 'Node(N7)'], [], [])] RectF=[(337.96989278659544, -88.2034709750382, 150.0, 80.0)]
block=[U2] category=[Generator.Abscissa] class=[AbsX] valInputs=[(['xmin', 'xmax', 'delta_x'], ['Node(N14)', 'Node(N15)', 'Node(N16)'], ['outAbscissa'], ['list_float'])] RectF=[(-896.3074748648298, -80.98636369578188, 158.390625, 80.0)]
block=[U4] category=[Tools.ListOperation] class=[MultiplyListValues] valInputs=[(['list1', 'list2'], ['Node(N10)', 'Node(N11)'], ['listMult'], ['list_float'])] RectF=[(-143.2894649052408, -145.3313161992832, 150.0, 80.0)]
block=[U0] category=[Generator.Functions] class=[exponential] valInputs=[(['amplitude', 'decay', 'shift', 'function', 'x'], ['Node(N0)', 'Node(N2)', 'Node(N3)', 'Node(N12)', 'Node(N9)'], ['outFonction'], ['list_float'])] RectF=[(-407.68381924494247, -283.9423773659324, 181.44802838816292, 205.21391940814533)]
block=[U1] category=[Generator.Functions] class=[trigonometric] valInputs=[(['angle', 'function', 'x_degree'], ['Node(N1)', 'Node(N13)', 'Node(N4)'], ['outFonction'], ['list_float'])] RectF=[(-392.75826662405774, 15.511599847426169, 171.609375, 118.80934875266445)]
[execution]
[]
['U2', 'ThreadOn', 'U0', 'U1', 'ThreadOff', 'U4', 'U5', 'U3']
{'U4': ('Tools.ListOperation', 'MultiplyListValues', "(['list1', 'list2'], ['U0:outFonction', 'U1:outFonction'], ['listMult'], ['list_float'])"), 'U3': ('Matplotlib.MatplotCurve', 'MatPlotCurve', "(['data', 'x'], ['U5:array', 'U2:outAbscissa'], [], [])"), 'U5': ('Tools.ArrayManipulation', 'build_array_float_dyn', "(['in_list', 'in_list_0'], ['U0:outFonction', 'U4:listMult'], ['array'], ['array_float'])"), 'U1': ('Generator.Functions', 'trigonometric', "(['angle', 'function', 'x_degree'], [45.0, 'sin(x)', 'U2:outAbscissa'], ['outFonction'], ['list_float'])"), 'U0': ('Generator.Functions', 'exponential', "(['amplitude', 'decay', 'shift', 'function', 'x'], [100.0, 500.0, 1.0, 'a*exp(-bx)+c', 'U2:outAbscissa'], ['outFonction'], ['list_float'])"), 'U2': ('Generator.Abscissa', 'AbsX', "(['xmin', 'xmax', 'delta_x'], [0.0, 5000.0, 1.0], ['outAbscissa'], ['list_float'])")}
['A5:', 'A4:', 'U1:outFonction', 'U2:outAbscissa', 'A3:', 'U0:outFonction', 'U2:outAbscissa', 'U0:outFonction', 'A2:', 'A1:', 'A0:', 'U4:listMult', 'U5:array', 'U2:outAbscissa', 'A6:', 'A7:', 'A8:']
{}
[]
